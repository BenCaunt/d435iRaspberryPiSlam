###############################################################################
# ───────────────  STAGE 1 : build everything from source  ────────────────────
###############################################################################
FROM ros:iron-ros-base as builder
ENV DEBIAN_FRONTEND=noninteractive \
    COLCON_WS=/colcon_ws


        
# ---------- base tools -------------------------------------------------------
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential git cmake ninja-build pkg-config curl \
    python3-colcon-common-extensions python3-vcstool python3-rosdep \
    libudev-dev libusb-1.0-0-dev libyaml-cpp-dev libeigen3-dev \
    libboost-all-dev libopencv-dev libssl-dev && \
    rm -rf /var/lib/apt/lists/*

# ---------- rosdep init inside container -------------------------------------
RUN rosdep update

# ---------- librealsense (user-space) ----------------------------------------
WORKDIR /tmp
RUN git clone --depth 1 https://github.com/IntelRealSense/librealsense.git
WORKDIR /tmp/librealsense
RUN mkdir build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release \
             -DFORCE_LIBUVC=ON -DBUILD_KERNEL=OFF \
             -DBUILD_WITH_SYSTEM_LIBUSB=ON \
             -DBUILD_EXAMPLES=OFF -DBUILD_GRAPHICAL_EXAMPLES=OFF && \
    cmake --build . -j$(nproc) && cmake --install .

# ---------- create ROS 2 workspace ------------------------------------------
RUN mkdir -p ${COLCON_WS}/src
WORKDIR ${COLCON_WS}/src

# Clone sources
RUN git clone -b ros2-development https://github.com/IntelRealSense/realsense-ros.git
RUN git clone -b ros2 https://github.com/SteveMacenski/slam_toolbox.git
RUN git clone -b rolling https://github.com/CCNYRoboticsLab/imu_tools.git
RUN git clone -b ros2 https://github.com/cra-ros-pkg/robot_localization.git


# ---------- extra runtime ROS 2 binaries the base image lacks ---------------
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-iron-diagnostic-updater \
    ros-iron-yaml-cpp-vendor \
    ros-iron-rviz-rendering \
    ros-iron-ament-cmake \
    && rm -rf /var/lib/apt/lists/*

# Install dependencies
WORKDIR ${COLCON_WS}
RUN rosdep install --from-paths src --ignore-src -y \
    --rosdistro iron --os=ubuntu:jammy \
    --skip-keys="sensor_msgs tf2_ros rclcpp_components \
                 diagnostic_updater yaml_cpp_vendor rviz_rendering"

# Build
RUN . /opt/ros/iron/setup.sh && \
    colcon build --merge-install --cmake-args -DCMAKE_BUILD_TYPE=Release

###############################################################################
# ───────────  STAGE 2 : runtime image (strip the build junk)  ───────────────-
###############################################################################
FROM ros:iron-ros-base
ENV COLCON_WS=/colcon_ws \
    ROS_DISTRO=iron \
    LANG=C.UTF-8

# Runtime libs needed by librealsense & slam
RUN apt-get update && apt-get install -y --no-install-recommends \
    libusb-1.0-0 libudev1 libyaml-cpp0.7 libeigen3-dev libboost-system1.74.0 \
    libopencv-core4.5d libopencv-imgproc4.5d libopencv-imgcodecs4.5d && \
    rm -rf /var/lib/apt/lists/*

# copy artefacts from builder
COPY --from=builder /usr/local /usr/local
COPY --from=builder /opt/ros/${ROS_DISTRO} /opt/ros/${ROS_DISTRO}
COPY --from=builder ${COLCON_WS}/install ${COLCON_WS}/install

# udev rule (camera permissions)
COPY --from=builder /tmp/librealsense/config/99-realsense-libusb.rules /etc/udev/rules.d/

# entry
ENV RMW_IMPLEMENTATION=rmw_fastrtps_cpp
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash"            >> /etc/bash.bashrc && \
    echo "source ${COLCON_WS}/install/setup.bash"              >> /etc/bash.bashrc

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash", "-c", "ros2 launch realsense2_camera rs_launch.py \
                   align_depth:=true enable_gyro:=true enable_accel:=true \
                   unite_imu_method:=linear_interpolation"]
    